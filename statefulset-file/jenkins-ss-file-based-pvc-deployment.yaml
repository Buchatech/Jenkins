apiVersion: v1
kind: Service
metadata:
  name: jenkins
spec:
  type: NodePort
  ports:
    - port: 8080
      targetPort: 8080
  selector:
    app: jenkins
---
apiVersion: v1
kind: Service
metadata:
  name: jenkins-jnlp
spec:
  type: ClusterIP
  ports:
    - port: 50000
      targetPort: 50000
  selector:
    app: jenkins
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jenkins-file-based-pvc
  labels:
    app: jenkins
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: azurefile-csi-nfs
  resources:
    requests:
      storage: 40Gi
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: jenkins
spec:
  selector:
    matchLabels:
      app: jenkins # has to match .spec.template.metadata.labels
  serviceName: jenkins
  replicas: 1
  template:
    metadata:
      labels:
        app: jenkins
        name: jenkins
      name: jenkins
    spec:
      terminationGracePeriodSeconds: 10
      containers:
      - image: jenkins/jenkins:lts
        imagePullPolicy: Always
        name: container-0
        ports:
          - name: http-port
            containerPort: 8080
          - name: jnlp-port
            containerPort: 50000
        securityContext:
          allowPrivilegeEscalation: true
          privileged: true
          readOnlyRootFilesystem: false
          runAsUser: 0
        volumeMounts:
          - mountPath: /var/jenkins_home
            name: jenkins-vol
      volumes:
      - name: jenkins-vol
        persistentVolumeClaim:
          claimName: jenkins-file-based-pvc
---
# apiVersion: apps/v1 # for versions before 1.9.0 use apps/v1beta2
# kind: Deployment
# metadata:
#   name: jenkins
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       app: jenkins
#   template:
#     metadata:
#       labels:
#         app: jenkins
#     spec:
#       containers:
#       - image: jenkins/jenkins:lts
#         imagePullPolicy: Always
#         name: container-0
#         ports:
#           - name: http-port
#             containerPort: 8080
#           - name: jnlp-port
#             containerPort: 50000
#         securityContext:
#           allowPrivilegeEscalation: true
#           privileged: true
#           readOnlyRootFilesystem: false
#           runAsUser: 0
#         volumeMounts:
#           - mountPath: /var/jenkins_home
#             name: jenkins-vol
#       volumes:
#       - name: jenkins-vol
#         persistentVolumeClaim:
#           claimName: jenkins-file-based-pvc
       

          # Get Jekins initialadminpassword from the logs after deployment:
          # kubectl get pod -n jenkins
          # kubectl logs <pod-name> -n jenkins

          # Remote into pod to check that the /var/jenkins_home has been created. 
          # kubectl exec -it <POD-NAME> -n <NAMESPACE> bash
